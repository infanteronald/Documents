class LazyLoader{constructor(){this.imageObserver=null;this.init()}init(){if("IntersectionObserver"in window){this.imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;img.src=img.dataset.src;img.classList.remove("lazy");img.classList.add("loaded");this.imageObserver.unobserve(img)}})});document.addEventListener("DOMContentLoaded",()=>{const lazyImages=document.querySelectorAll("img[data-src]");lazyImages.forEach(img=>this.imageObserver.observe(img))})}}static loadScript(src,callback){const script=document.createElement("script");script.src=src;script.async=true;if(callback)script.onload=callback;document.head.appendChild(script)}static loadCSS(href){const link=document.createElement("link");link.rel="stylesheet";link.href=href;document.head.appendChild(link)}}new LazyLoader();
