#!/bin/bash

# üöÄ SCRIPT DE DEPLOYMENT LIMPIO - SISTEMA SEQUOIA SPEED
# Post-Reorganizaci√≥n Masiva - Solo archivos de producci√≥n

echo "üöÄ DEPLOYMENT LIMPIO - SEQUOIA SPEED"
echo "====================================="
echo "Fecha: $(date)"
echo ""

# Configuraci√≥n (AJUSTAR SEG√öN TU SERVIDOR)
LOCAL_PATH="/Users/ronaldinfante/Documents/pedidos"
REMOTE_HOST="usuario@sequoiaspeed.com.co"
REMOTE_PATH="/path/to/production"
BACKUP_REMOTE_PATH="/path/to/backup/$(date +%Y%m%d_%H%M%S)"

echo "üìã CONFIGURACI√ìN:"
echo "----------------"
echo "Local: $LOCAL_PATH"
echo "Remoto: $REMOTE_HOST:$REMOTE_PATH"
echo "Backup: $BACKUP_REMOTE_PATH"
echo ""

# Funci√≥n de verificaci√≥n pre-deployment
verify_local_structure() {
    echo "üîç VERIFICANDO ESTRUCTURA LOCAL..."
    
    # Verificar archivos cr√≠ticos
    critical_files=("bold_webhook_enhanced.php" "index.php" "conexion.php" "orden_pedido.php")
    
    for file in "${critical_files[@]}"; do
        if [ ! -f "$LOCAL_PATH/$file" ]; then
            echo "‚ùå ERROR: $file no encontrado"
            exit 1
        fi
    done
    
    echo "‚úÖ Estructura local verificada"
}

# Funci√≥n de backup remoto
backup_remote() {
    echo "üíæ CREANDO BACKUP REMOTO..."
    
    ssh $REMOTE_HOST "mkdir -p $BACKUP_REMOTE_PATH"
    ssh $REMOTE_HOST "cp -r $REMOTE_PATH/* $BACKUP_REMOTE_PATH/ 2>/dev/null || true"
    
    echo "‚úÖ Backup creado en: $BACKUP_REMOTE_PATH"
}

# Funci√≥n de deployment
deploy_production() {
    echo "üì¶ DESPLEGANDO ARCHIVOS DE PRODUCCI√ìN..."
    
    # Sync solo archivos de producci√≥n (EXCLUIR desarrollo/)
    rsync -avz --progress \
        --exclude='desarrollo/' \
        --exclude='.git*' \
        --exclude='.DS_Store' \
        --exclude='*.log' \
        --exclude='node_modules/' \
        --exclude='*.tmp' \
        --exclude='development-monitor.sh' \
        --exclude='deploy-production.sh' \
        "$LOCAL_PATH/" \
        "$REMOTE_HOST:$REMOTE_PATH/"
    
    echo "‚úÖ Deployment completado"
}

# Funci√≥n de verificaci√≥n post-deployment
verify_remote() {
    echo "üîç VERIFICANDO DEPLOYMENT REMOTO..."
    
    # Verificar archivos cr√≠ticos en remoto
    ssh $REMOTE_HOST "cd $REMOTE_PATH && php -l bold_webhook_enhanced.php" && echo "‚úÖ Webhook syntax OK"
    ssh $REMOTE_HOST "cd $REMOTE_PATH && php -l index.php" && echo "‚úÖ Index syntax OK"
    ssh $REMOTE_HOST "cd $REMOTE_PATH && [ -f styles.css ] && echo '‚úÖ CSS files OK'"
    
    echo "‚úÖ Verificaci√≥n remota completada"
}

# Funci√≥n principal
main() {
    echo "üéØ INICIANDO DEPLOYMENT LIMPIO..."
    echo ""
    
    # Paso 1: Verificar estructura local
    verify_local_structure
    
    # Paso 2: Crear backup remoto
    # backup_remote  # Descomenta si quieres backup autom√°tico
    
    # Paso 3: Desplegar archivos
    echo ""
    echo "‚ö†Ô∏è IMPORTANTE: Este deployment excluye el directorio 'desarrollo/'"
    echo "Solo se subir√°n archivos de producci√≥n esenciales."
    echo ""
    read -p "¬øContinuar con el deployment? (y/N): " confirm
    
    if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
        deploy_production
        
        # Paso 4: Verificar deployment
        verify_remote
        
        echo ""
        echo "üéâ DEPLOYMENT COMPLETADO EXITOSAMENTE!"
        echo "üìä Estad√≠sticas:"
        echo "   - Solo archivos de producci√≥n subidos"
        echo "   - Directorio 'desarrollo/' excluido correctamente"
        echo "   - Sistema optimizado y limpio"
        echo ""
        echo "üîß Pr√≥ximos pasos:"
        echo "   1. Verificar funcionamiento en el servidor"
        echo "   2. Probar Bold webhook en producci√≥n"
        echo "   3. Monitorear logs del sistema"
        
    else
        echo "‚ùå Deployment cancelado por el usuario"
        exit 1
    fi
}

# Ejecutar funci√≥n principal
main "$@"
